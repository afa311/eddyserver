package svr;

import "proto/public_enum.proto";

/************************************************************************/
/* 与DBAgent的协议                                                       */
/************************************************************************/

// 登录DBAgent请求
message LoginDBAgentReq { 
}

// 登录DBAgent返回
message LoginDBAgentRsp {
    required uint32 heartbeat_interval = 1; // 心跳包间隔
}

// 查询DBAgent信息请求
message DBAgentInfoReq {
}

// 查询DBAgent信息返回
message DBAgentInfoRsp {
    required uint32 up_volume = 1;           // 每秒上行流量
    required uint32 down_volume = 2;         // 每秒下行流量
    required uint32 handle_select_count = 3; // 每秒处理查询数量
    required uint32 handle_insert_count = 4; // 每秒处理插入数量
    required uint32 handle_update_count = 5; // 每秒处理更新数量
    required uint32 handle_delete_count = 6; // 每秒处理删除数量
    required uint32 client_num = 7;          // 客户端数量
    required uint32 queue_num = 8;           // 队列中的数量
}

// 查询DBAgent请求
message QueryDBAgentReq {
    enum ActoinType { 
        kSelect = 1; // 查询
        kInsert = 2; // 插入
        kUpdate = 3; // 更新
        kDelete = 4; // 删除
    }
    
    enum DatabaseType {
        kRedis = 1; // redis数据库
        kMySQL = 2; // MySQL数据库
    }

    required uint32 sequence = 1;     // 序列号
    required DatabaseType dbtype = 2; // 数据库类型
    required ActoinType action = 3;   // 操作类型
    required string dbname = 4;       // 数据库名称
    optional string statement = 5;    // 操作语句
}

// 查询DBAgent返回
message QueryDBAgentRsp {
    required uint32 sequence = 1; // 序列号
    optional string result = 2;   // 返回数据
}

// DB错误返回
message DBErrorRsp
{
    required uint32 sequence = 1;  // 序列号
    required int32 error_code = 2; // 错误码
    optional string what = 3;      // 错误原因
}

// DBAgent错误返回
message DBAgentErrorRsp {
    required pub.ErrorCode error_code = 1; // 错误码
    optional uint32 sequence = 2;          // 序列号
}

/************************************************************************/
/* 与Router的协议                                                        */
/************************************************************************/

// 节点类型
enum NodeType {
    kLoginServer = 1;    // 登录服务器
    kLinkerServer = 2;   // 连接器服务器
    kMainLogicSever = 3; // 主逻辑服务器
}

// 服务器节点
message ChildNode {
    required NodeType type = 1;                 // 服务器节点类型
    optional uint32 child_id = 2 [default = 1]; // 服务器子节点id
}

// Router错误返回
message RouterErrorRsp {
    required pub.ErrorCode error_code = 1; // 错误码
    optional string what = 2;              // 错误原因
}

// 登录Router请求
message LoginRouterReq {
    required ChildNode node = 1; // 服务器节点
}

// 登录Router返回
message LoginRouterRsp {
    required uint32 heartbeat_interval = 1; // 心跳包间隔
}

// 查询Router信息请求
message RouterInfoReq {
}

// 查询Router信息返回
message RouterInfoRsp {
    required uint32 up_volume = 1;     // 每秒上行流量
    required uint32 down_volume = 2;   // 每秒下行流量
    repeated ChildNode node_lists = 3; // 节点列表
}

// 转发消息请求
message ForwardReq {
    required ChildNode dst = 1;   // 目标服务器节点
    required bytes user_data = 2; // 用户数据
}

// 广播消息请求
message BroadcastReq {
    repeated NodeType dst_lists = 1; // 目标服务器列表
    required bytes user_data = 2;    // 用户数据
}

// 新消息通知
message RouterNotify {
	required ChildNode src = 1;   // 目标服务器节点
    required bytes user_data = 2; // 用户数据
}