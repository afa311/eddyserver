// 服务器节点间的协议

package internal;

// 错误码
enum ErrorCode {
    kNotLoggedIn = 1; // 未登录
    kDisconnect = 2; // 断开连接
    kNotConnected = 3; // 未连接
    kInvalidProtocol = 4; // 无效协议
    kInvalidOperation = 5; // 无效操作
    kNotFoundDatabase = 6; // 不存在的数据库
    kResourceInsufficiency = 7; // 服务器资源不足
}

// 心跳上行包
message PingReq {
}

// 心跳上行包
message PongRsp {
}

/////////////////////////////////////////////////////
// 到DBProxy的协议
/////////////////////////////////////////////////////

// 登录DB代理请求
message LoginDBProxyReq { 
}

// 登录DB代理返回
message LoginDBProxyRsp {
    required uint32 heartbeat_interval = 1; // 心跳包间隔
}

// 查询DB代理请求
message QueryDBProxyReq {
    enum ActoinType { 
        kSelect = 1; // 查询
        kInsert = 2; // 插入
        kUpdate = 3; // 更新
        kDelete = 4; // 删除
    }
    
    enum DatabaseType {
        kRedis = 1; // redis数据库
        kMySQL = 2; // mysql数据库
    }

    required uint32 sequence = 1; // 序列号
    required DatabaseType dbtype = 2; // 数据库类型
    required ActoinType action = 3; // 操作类型
    required string dbname = 4; // 数据库名称
    optional string statement = 5; // 操作语句
}

// 查询DB代码返回
message QueryDBProxyRsp {
    required uint32 sequence = 1; // 序列号
    optional string result = 2; // 返回数据
}

// DB错误返回
message DBErrorRsp
{
    required uint32 sequence = 1; // 序列号
    required int32 error_code = 2; // 错误码
    optional string what = 3; // 错误原因
}

// DB代理错误返回
message DBProxyErrorRsp {
    required ErrorCode error_code = 1; // 错误码
    optional uint32 sequence = 2; // 序列号
}

/////////////////////////////////////////////////////
// 到GatewayServer的协议
/////////////////////////////////////////////////////

// 服务器节点类型
enum NodeType {
    kLicenceServer = 1; // 验证服务器
    kLinkerServer = 2; // 链接服务器
    kMainLogicSever = 3; // 主逻辑服务器
}

// 网关错误返回
message GatewayErrorRsp {
    required ErrorCode error_code = 1; // 错误码
    optional string what = 2; // 错误原因
}

// 登录网关请求
message LoginGatewayReq {
    required NodeType type = 1; // 服务器节点类型
    optional uint32 child_id = 2 [default = 1]; // 服务器子节点id
}

// 登录网关返回
message LoginGatewayRsp {
    required uint32 heartbeat_interval = 1; // 心跳包间隔
}

// 暂停工作请求
message PauseWorkReq {
    optional uint32 duration = 1 [default = 0]; // 暂停时长
}

// 暂停工作返回
message PauseWorkRsp {
}

// 继续工作请求
message ContinueWorkReq {
}

// 继续工作返回
message ContinueWorkRsp {
}

// 转发消息请求
message ForwardMessageReq {
    required NodeType dst_type = 1; // 目标服务器类型
    optional uint32 dst_child_id = 2 [default = 1]; // 目标服务器子节点id
}

// 转发消息返回
message ForwardMessageRsp {
    required NodeType src_type = 1; // 来源服务器类型
    optional uint32 src_child_id = 2 [default = 1]; // 来源服务器子节点id
    required NodeType dst_type = 3; // 目标服务器类型
    optional uint32 dst_child_id = 4 [default = 1]; // 目标服务器子节点id
}

// 广播消息请求
message BroadcastMessageReq {
    repeated NodeType dst_lists = 1; // 目标服务器列表
}

// 广播消息返回
message BroadcastMessageRsp {
    required NodeType src_type = 1; // 来源服务器类型
    optional uint32 src_child_id = 2 [default = 1]; // 来源服务器子节点id
}