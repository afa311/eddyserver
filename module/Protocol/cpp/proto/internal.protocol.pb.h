// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/internal.protocol.proto

#ifndef PROTOBUF_proto_2finternal_2eprotocol_2eproto__INCLUDED
#define PROTOBUF_proto_2finternal_2eprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace internal {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

class PingReq;
class PongRsp;
class LoginDBProxyReq;
class LoginDBProxyRsp;
class QueryDBProxyReq;
class QueryDBProxyRsp;
class DBErrorRsp;
class DBProxyErrorRsp;
class GatewayErrorRsp;
class LoginGatewayReq;
class LoginGatewayRsp;
class PauseWorkReq;
class PauseWorkRsp;
class ContinueWorkReq;
class ContinueWorkRsp;
class ForwardMessageReq;
class ForwardMessageRsp;
class BroadcastMessageReq;
class BroadcastMessageRsp;

enum QueryDBProxyReq_ActoinType {
  QueryDBProxyReq_ActoinType_kSelect = 1,
  QueryDBProxyReq_ActoinType_kInsert = 2,
  QueryDBProxyReq_ActoinType_kUpdate = 3,
  QueryDBProxyReq_ActoinType_kDelete = 4
};
bool QueryDBProxyReq_ActoinType_IsValid(int value);
const QueryDBProxyReq_ActoinType QueryDBProxyReq_ActoinType_ActoinType_MIN = QueryDBProxyReq_ActoinType_kSelect;
const QueryDBProxyReq_ActoinType QueryDBProxyReq_ActoinType_ActoinType_MAX = QueryDBProxyReq_ActoinType_kDelete;
const int QueryDBProxyReq_ActoinType_ActoinType_ARRAYSIZE = QueryDBProxyReq_ActoinType_ActoinType_MAX + 1;

const ::google::protobuf::EnumDescriptor* QueryDBProxyReq_ActoinType_descriptor();
inline const ::std::string& QueryDBProxyReq_ActoinType_Name(QueryDBProxyReq_ActoinType value) {
  return ::google::protobuf::internal::NameOfEnum(
    QueryDBProxyReq_ActoinType_descriptor(), value);
}
inline bool QueryDBProxyReq_ActoinType_Parse(
    const ::std::string& name, QueryDBProxyReq_ActoinType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QueryDBProxyReq_ActoinType>(
    QueryDBProxyReq_ActoinType_descriptor(), name, value);
}
enum QueryDBProxyReq_DatabaseType {
  QueryDBProxyReq_DatabaseType_kRedis = 1,
  QueryDBProxyReq_DatabaseType_kMySQL = 2
};
bool QueryDBProxyReq_DatabaseType_IsValid(int value);
const QueryDBProxyReq_DatabaseType QueryDBProxyReq_DatabaseType_DatabaseType_MIN = QueryDBProxyReq_DatabaseType_kRedis;
const QueryDBProxyReq_DatabaseType QueryDBProxyReq_DatabaseType_DatabaseType_MAX = QueryDBProxyReq_DatabaseType_kMySQL;
const int QueryDBProxyReq_DatabaseType_DatabaseType_ARRAYSIZE = QueryDBProxyReq_DatabaseType_DatabaseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* QueryDBProxyReq_DatabaseType_descriptor();
inline const ::std::string& QueryDBProxyReq_DatabaseType_Name(QueryDBProxyReq_DatabaseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    QueryDBProxyReq_DatabaseType_descriptor(), value);
}
inline bool QueryDBProxyReq_DatabaseType_Parse(
    const ::std::string& name, QueryDBProxyReq_DatabaseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QueryDBProxyReq_DatabaseType>(
    QueryDBProxyReq_DatabaseType_descriptor(), name, value);
}
enum ErrorCode {
  kNotLoggedIn = 1,
  kDisconnect = 2,
  kNotConnected = 3,
  kInvalidProtocol = 4,
  kInvalidOperation = 5,
  kNotFoundDatabase = 6,
  kResourceInsufficiency = 7
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = kNotLoggedIn;
const ErrorCode ErrorCode_MAX = kResourceInsufficiency;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor();
inline const ::std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCode_descriptor(), value);
}
inline bool ErrorCode_Parse(
    const ::std::string& name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
    ErrorCode_descriptor(), name, value);
}
enum NodeType {
  kLicenceServer = 1,
  kLinkerServer = 2,
  kMainLogicSever = 3
};
bool NodeType_IsValid(int value);
const NodeType NodeType_MIN = kLicenceServer;
const NodeType NodeType_MAX = kMainLogicSever;
const int NodeType_ARRAYSIZE = NodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* NodeType_descriptor();
inline const ::std::string& NodeType_Name(NodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    NodeType_descriptor(), value);
}
inline bool NodeType_Parse(
    const ::std::string& name, NodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NodeType>(
    NodeType_descriptor(), name, value);
}
// ===================================================================

class PingReq : public ::google::protobuf::Message {
 public:
  PingReq();
  virtual ~PingReq();

  PingReq(const PingReq& from);

  inline PingReq& operator=(const PingReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PingReq& default_instance();

  void Swap(PingReq* other);

  // implements Message ----------------------------------------------

  PingReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PingReq& from);
  void MergeFrom(const PingReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:internal.PingReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static PingReq* default_instance_;
};
// -------------------------------------------------------------------

class PongRsp : public ::google::protobuf::Message {
 public:
  PongRsp();
  virtual ~PongRsp();

  PongRsp(const PongRsp& from);

  inline PongRsp& operator=(const PongRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PongRsp& default_instance();

  void Swap(PongRsp* other);

  // implements Message ----------------------------------------------

  PongRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PongRsp& from);
  void MergeFrom(const PongRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:internal.PongRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static PongRsp* default_instance_;
};
// -------------------------------------------------------------------

class LoginDBProxyReq : public ::google::protobuf::Message {
 public:
  LoginDBProxyReq();
  virtual ~LoginDBProxyReq();

  LoginDBProxyReq(const LoginDBProxyReq& from);

  inline LoginDBProxyReq& operator=(const LoginDBProxyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginDBProxyReq& default_instance();

  void Swap(LoginDBProxyReq* other);

  // implements Message ----------------------------------------------

  LoginDBProxyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginDBProxyReq& from);
  void MergeFrom(const LoginDBProxyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:internal.LoginDBProxyReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static LoginDBProxyReq* default_instance_;
};
// -------------------------------------------------------------------

class LoginDBProxyRsp : public ::google::protobuf::Message {
 public:
  LoginDBProxyRsp();
  virtual ~LoginDBProxyRsp();

  LoginDBProxyRsp(const LoginDBProxyRsp& from);

  inline LoginDBProxyRsp& operator=(const LoginDBProxyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginDBProxyRsp& default_instance();

  void Swap(LoginDBProxyRsp* other);

  // implements Message ----------------------------------------------

  LoginDBProxyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginDBProxyRsp& from);
  void MergeFrom(const LoginDBProxyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 heartbeat_interval = 1;
  inline bool has_heartbeat_interval() const;
  inline void clear_heartbeat_interval();
  static const int kHeartbeatIntervalFieldNumber = 1;
  inline ::google::protobuf::uint32 heartbeat_interval() const;
  inline void set_heartbeat_interval(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:internal.LoginDBProxyRsp)
 private:
  inline void set_has_heartbeat_interval();
  inline void clear_has_heartbeat_interval();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 heartbeat_interval_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static LoginDBProxyRsp* default_instance_;
};
// -------------------------------------------------------------------

class QueryDBProxyReq : public ::google::protobuf::Message {
 public:
  QueryDBProxyReq();
  virtual ~QueryDBProxyReq();

  QueryDBProxyReq(const QueryDBProxyReq& from);

  inline QueryDBProxyReq& operator=(const QueryDBProxyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryDBProxyReq& default_instance();

  void Swap(QueryDBProxyReq* other);

  // implements Message ----------------------------------------------

  QueryDBProxyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryDBProxyReq& from);
  void MergeFrom(const QueryDBProxyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef QueryDBProxyReq_ActoinType ActoinType;
  static const ActoinType kSelect = QueryDBProxyReq_ActoinType_kSelect;
  static const ActoinType kInsert = QueryDBProxyReq_ActoinType_kInsert;
  static const ActoinType kUpdate = QueryDBProxyReq_ActoinType_kUpdate;
  static const ActoinType kDelete = QueryDBProxyReq_ActoinType_kDelete;
  static inline bool ActoinType_IsValid(int value) {
    return QueryDBProxyReq_ActoinType_IsValid(value);
  }
  static const ActoinType ActoinType_MIN =
    QueryDBProxyReq_ActoinType_ActoinType_MIN;
  static const ActoinType ActoinType_MAX =
    QueryDBProxyReq_ActoinType_ActoinType_MAX;
  static const int ActoinType_ARRAYSIZE =
    QueryDBProxyReq_ActoinType_ActoinType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ActoinType_descriptor() {
    return QueryDBProxyReq_ActoinType_descriptor();
  }
  static inline const ::std::string& ActoinType_Name(ActoinType value) {
    return QueryDBProxyReq_ActoinType_Name(value);
  }
  static inline bool ActoinType_Parse(const ::std::string& name,
      ActoinType* value) {
    return QueryDBProxyReq_ActoinType_Parse(name, value);
  }

  typedef QueryDBProxyReq_DatabaseType DatabaseType;
  static const DatabaseType kRedis = QueryDBProxyReq_DatabaseType_kRedis;
  static const DatabaseType kMySQL = QueryDBProxyReq_DatabaseType_kMySQL;
  static inline bool DatabaseType_IsValid(int value) {
    return QueryDBProxyReq_DatabaseType_IsValid(value);
  }
  static const DatabaseType DatabaseType_MIN =
    QueryDBProxyReq_DatabaseType_DatabaseType_MIN;
  static const DatabaseType DatabaseType_MAX =
    QueryDBProxyReq_DatabaseType_DatabaseType_MAX;
  static const int DatabaseType_ARRAYSIZE =
    QueryDBProxyReq_DatabaseType_DatabaseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DatabaseType_descriptor() {
    return QueryDBProxyReq_DatabaseType_descriptor();
  }
  static inline const ::std::string& DatabaseType_Name(DatabaseType value) {
    return QueryDBProxyReq_DatabaseType_Name(value);
  }
  static inline bool DatabaseType_Parse(const ::std::string& name,
      DatabaseType* value) {
    return QueryDBProxyReq_DatabaseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 sequence = 1;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  inline ::google::protobuf::uint32 sequence() const;
  inline void set_sequence(::google::protobuf::uint32 value);

  // required .internal.QueryDBProxyReq.DatabaseType dbtype = 2;
  inline bool has_dbtype() const;
  inline void clear_dbtype();
  static const int kDbtypeFieldNumber = 2;
  inline ::internal::QueryDBProxyReq_DatabaseType dbtype() const;
  inline void set_dbtype(::internal::QueryDBProxyReq_DatabaseType value);

  // required .internal.QueryDBProxyReq.ActoinType action = 3;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 3;
  inline ::internal::QueryDBProxyReq_ActoinType action() const;
  inline void set_action(::internal::QueryDBProxyReq_ActoinType value);

  // required string dbname = 4;
  inline bool has_dbname() const;
  inline void clear_dbname();
  static const int kDbnameFieldNumber = 4;
  inline const ::std::string& dbname() const;
  inline void set_dbname(const ::std::string& value);
  inline void set_dbname(const char* value);
  inline void set_dbname(const char* value, size_t size);
  inline ::std::string* mutable_dbname();
  inline ::std::string* release_dbname();
  inline void set_allocated_dbname(::std::string* dbname);

  // optional string statement = 5;
  inline bool has_statement() const;
  inline void clear_statement();
  static const int kStatementFieldNumber = 5;
  inline const ::std::string& statement() const;
  inline void set_statement(const ::std::string& value);
  inline void set_statement(const char* value);
  inline void set_statement(const char* value, size_t size);
  inline ::std::string* mutable_statement();
  inline ::std::string* release_statement();
  inline void set_allocated_statement(::std::string* statement);

  // @@protoc_insertion_point(class_scope:internal.QueryDBProxyReq)
 private:
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_dbtype();
  inline void clear_has_dbtype();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_dbname();
  inline void clear_has_dbname();
  inline void set_has_statement();
  inline void clear_has_statement();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 sequence_;
  int dbtype_;
  ::std::string* dbname_;
  ::std::string* statement_;
  int action_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static QueryDBProxyReq* default_instance_;
};
// -------------------------------------------------------------------

class QueryDBProxyRsp : public ::google::protobuf::Message {
 public:
  QueryDBProxyRsp();
  virtual ~QueryDBProxyRsp();

  QueryDBProxyRsp(const QueryDBProxyRsp& from);

  inline QueryDBProxyRsp& operator=(const QueryDBProxyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryDBProxyRsp& default_instance();

  void Swap(QueryDBProxyRsp* other);

  // implements Message ----------------------------------------------

  QueryDBProxyRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryDBProxyRsp& from);
  void MergeFrom(const QueryDBProxyRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sequence = 1;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  inline ::google::protobuf::uint32 sequence() const;
  inline void set_sequence(::google::protobuf::uint32 value);

  // optional string result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline const ::std::string& result() const;
  inline void set_result(const ::std::string& value);
  inline void set_result(const char* value);
  inline void set_result(const char* value, size_t size);
  inline ::std::string* mutable_result();
  inline ::std::string* release_result();
  inline void set_allocated_result(::std::string* result);

  // @@protoc_insertion_point(class_scope:internal.QueryDBProxyRsp)
 private:
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* result_;
  ::google::protobuf::uint32 sequence_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static QueryDBProxyRsp* default_instance_;
};
// -------------------------------------------------------------------

class DBErrorRsp : public ::google::protobuf::Message {
 public:
  DBErrorRsp();
  virtual ~DBErrorRsp();

  DBErrorRsp(const DBErrorRsp& from);

  inline DBErrorRsp& operator=(const DBErrorRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBErrorRsp& default_instance();

  void Swap(DBErrorRsp* other);

  // implements Message ----------------------------------------------

  DBErrorRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBErrorRsp& from);
  void MergeFrom(const DBErrorRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sequence = 1;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  inline ::google::protobuf::uint32 sequence() const;
  inline void set_sequence(::google::protobuf::uint32 value);

  // required int32 error_code = 2;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 2;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);

  // optional string what = 3;
  inline bool has_what() const;
  inline void clear_what();
  static const int kWhatFieldNumber = 3;
  inline const ::std::string& what() const;
  inline void set_what(const ::std::string& value);
  inline void set_what(const char* value);
  inline void set_what(const char* value, size_t size);
  inline ::std::string* mutable_what();
  inline ::std::string* release_what();
  inline void set_allocated_what(::std::string* what);

  // @@protoc_insertion_point(class_scope:internal.DBErrorRsp)
 private:
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_what();
  inline void clear_has_what();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 sequence_;
  ::google::protobuf::int32 error_code_;
  ::std::string* what_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static DBErrorRsp* default_instance_;
};
// -------------------------------------------------------------------

class DBProxyErrorRsp : public ::google::protobuf::Message {
 public:
  DBProxyErrorRsp();
  virtual ~DBProxyErrorRsp();

  DBProxyErrorRsp(const DBProxyErrorRsp& from);

  inline DBProxyErrorRsp& operator=(const DBProxyErrorRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBProxyErrorRsp& default_instance();

  void Swap(DBProxyErrorRsp* other);

  // implements Message ----------------------------------------------

  DBProxyErrorRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBProxyErrorRsp& from);
  void MergeFrom(const DBProxyErrorRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .internal.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::internal::ErrorCode error_code() const;
  inline void set_error_code(::internal::ErrorCode value);

  // optional uint32 sequence = 2;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 2;
  inline ::google::protobuf::uint32 sequence() const;
  inline void set_sequence(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:internal.DBProxyErrorRsp)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_sequence();
  inline void clear_has_sequence();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int error_code_;
  ::google::protobuf::uint32 sequence_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static DBProxyErrorRsp* default_instance_;
};
// -------------------------------------------------------------------

class GatewayErrorRsp : public ::google::protobuf::Message {
 public:
  GatewayErrorRsp();
  virtual ~GatewayErrorRsp();

  GatewayErrorRsp(const GatewayErrorRsp& from);

  inline GatewayErrorRsp& operator=(const GatewayErrorRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GatewayErrorRsp& default_instance();

  void Swap(GatewayErrorRsp* other);

  // implements Message ----------------------------------------------

  GatewayErrorRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GatewayErrorRsp& from);
  void MergeFrom(const GatewayErrorRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .internal.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::internal::ErrorCode error_code() const;
  inline void set_error_code(::internal::ErrorCode value);

  // optional string what = 2;
  inline bool has_what() const;
  inline void clear_what();
  static const int kWhatFieldNumber = 2;
  inline const ::std::string& what() const;
  inline void set_what(const ::std::string& value);
  inline void set_what(const char* value);
  inline void set_what(const char* value, size_t size);
  inline ::std::string* mutable_what();
  inline ::std::string* release_what();
  inline void set_allocated_what(::std::string* what);

  // @@protoc_insertion_point(class_scope:internal.GatewayErrorRsp)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_what();
  inline void clear_has_what();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* what_;
  int error_code_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static GatewayErrorRsp* default_instance_;
};
// -------------------------------------------------------------------

class LoginGatewayReq : public ::google::protobuf::Message {
 public:
  LoginGatewayReq();
  virtual ~LoginGatewayReq();

  LoginGatewayReq(const LoginGatewayReq& from);

  inline LoginGatewayReq& operator=(const LoginGatewayReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginGatewayReq& default_instance();

  void Swap(LoginGatewayReq* other);

  // implements Message ----------------------------------------------

  LoginGatewayReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginGatewayReq& from);
  void MergeFrom(const LoginGatewayReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .internal.NodeType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::internal::NodeType type() const;
  inline void set_type(::internal::NodeType value);

  // optional uint32 child_id = 2 [default = 1];
  inline bool has_child_id() const;
  inline void clear_child_id();
  static const int kChildIdFieldNumber = 2;
  inline ::google::protobuf::uint32 child_id() const;
  inline void set_child_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:internal.LoginGatewayReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_child_id();
  inline void clear_has_child_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 child_id_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static LoginGatewayReq* default_instance_;
};
// -------------------------------------------------------------------

class LoginGatewayRsp : public ::google::protobuf::Message {
 public:
  LoginGatewayRsp();
  virtual ~LoginGatewayRsp();

  LoginGatewayRsp(const LoginGatewayRsp& from);

  inline LoginGatewayRsp& operator=(const LoginGatewayRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginGatewayRsp& default_instance();

  void Swap(LoginGatewayRsp* other);

  // implements Message ----------------------------------------------

  LoginGatewayRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginGatewayRsp& from);
  void MergeFrom(const LoginGatewayRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 heartbeat_interval = 1;
  inline bool has_heartbeat_interval() const;
  inline void clear_heartbeat_interval();
  static const int kHeartbeatIntervalFieldNumber = 1;
  inline ::google::protobuf::uint32 heartbeat_interval() const;
  inline void set_heartbeat_interval(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:internal.LoginGatewayRsp)
 private:
  inline void set_has_heartbeat_interval();
  inline void clear_has_heartbeat_interval();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 heartbeat_interval_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static LoginGatewayRsp* default_instance_;
};
// -------------------------------------------------------------------

class PauseWorkReq : public ::google::protobuf::Message {
 public:
  PauseWorkReq();
  virtual ~PauseWorkReq();

  PauseWorkReq(const PauseWorkReq& from);

  inline PauseWorkReq& operator=(const PauseWorkReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PauseWorkReq& default_instance();

  void Swap(PauseWorkReq* other);

  // implements Message ----------------------------------------------

  PauseWorkReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PauseWorkReq& from);
  void MergeFrom(const PauseWorkReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 duration = 1 [default = 0];
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 1;
  inline ::google::protobuf::uint32 duration() const;
  inline void set_duration(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:internal.PauseWorkReq)
 private:
  inline void set_has_duration();
  inline void clear_has_duration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 duration_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static PauseWorkReq* default_instance_;
};
// -------------------------------------------------------------------

class PauseWorkRsp : public ::google::protobuf::Message {
 public:
  PauseWorkRsp();
  virtual ~PauseWorkRsp();

  PauseWorkRsp(const PauseWorkRsp& from);

  inline PauseWorkRsp& operator=(const PauseWorkRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PauseWorkRsp& default_instance();

  void Swap(PauseWorkRsp* other);

  // implements Message ----------------------------------------------

  PauseWorkRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PauseWorkRsp& from);
  void MergeFrom(const PauseWorkRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:internal.PauseWorkRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static PauseWorkRsp* default_instance_;
};
// -------------------------------------------------------------------

class ContinueWorkReq : public ::google::protobuf::Message {
 public:
  ContinueWorkReq();
  virtual ~ContinueWorkReq();

  ContinueWorkReq(const ContinueWorkReq& from);

  inline ContinueWorkReq& operator=(const ContinueWorkReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContinueWorkReq& default_instance();

  void Swap(ContinueWorkReq* other);

  // implements Message ----------------------------------------------

  ContinueWorkReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContinueWorkReq& from);
  void MergeFrom(const ContinueWorkReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:internal.ContinueWorkReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static ContinueWorkReq* default_instance_;
};
// -------------------------------------------------------------------

class ContinueWorkRsp : public ::google::protobuf::Message {
 public:
  ContinueWorkRsp();
  virtual ~ContinueWorkRsp();

  ContinueWorkRsp(const ContinueWorkRsp& from);

  inline ContinueWorkRsp& operator=(const ContinueWorkRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContinueWorkRsp& default_instance();

  void Swap(ContinueWorkRsp* other);

  // implements Message ----------------------------------------------

  ContinueWorkRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContinueWorkRsp& from);
  void MergeFrom(const ContinueWorkRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:internal.ContinueWorkRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static ContinueWorkRsp* default_instance_;
};
// -------------------------------------------------------------------

class ForwardMessageReq : public ::google::protobuf::Message {
 public:
  ForwardMessageReq();
  virtual ~ForwardMessageReq();

  ForwardMessageReq(const ForwardMessageReq& from);

  inline ForwardMessageReq& operator=(const ForwardMessageReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardMessageReq& default_instance();

  void Swap(ForwardMessageReq* other);

  // implements Message ----------------------------------------------

  ForwardMessageReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForwardMessageReq& from);
  void MergeFrom(const ForwardMessageReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .internal.NodeType dst_type = 1;
  inline bool has_dst_type() const;
  inline void clear_dst_type();
  static const int kDstTypeFieldNumber = 1;
  inline ::internal::NodeType dst_type() const;
  inline void set_dst_type(::internal::NodeType value);

  // optional uint32 dst_child_id = 2 [default = 1];
  inline bool has_dst_child_id() const;
  inline void clear_dst_child_id();
  static const int kDstChildIdFieldNumber = 2;
  inline ::google::protobuf::uint32 dst_child_id() const;
  inline void set_dst_child_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:internal.ForwardMessageReq)
 private:
  inline void set_has_dst_type();
  inline void clear_has_dst_type();
  inline void set_has_dst_child_id();
  inline void clear_has_dst_child_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int dst_type_;
  ::google::protobuf::uint32 dst_child_id_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static ForwardMessageReq* default_instance_;
};
// -------------------------------------------------------------------

class ForwardMessageRsp : public ::google::protobuf::Message {
 public:
  ForwardMessageRsp();
  virtual ~ForwardMessageRsp();

  ForwardMessageRsp(const ForwardMessageRsp& from);

  inline ForwardMessageRsp& operator=(const ForwardMessageRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardMessageRsp& default_instance();

  void Swap(ForwardMessageRsp* other);

  // implements Message ----------------------------------------------

  ForwardMessageRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForwardMessageRsp& from);
  void MergeFrom(const ForwardMessageRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .internal.NodeType src_type = 1;
  inline bool has_src_type() const;
  inline void clear_src_type();
  static const int kSrcTypeFieldNumber = 1;
  inline ::internal::NodeType src_type() const;
  inline void set_src_type(::internal::NodeType value);

  // optional uint32 src_child_id = 2 [default = 1];
  inline bool has_src_child_id() const;
  inline void clear_src_child_id();
  static const int kSrcChildIdFieldNumber = 2;
  inline ::google::protobuf::uint32 src_child_id() const;
  inline void set_src_child_id(::google::protobuf::uint32 value);

  // required .internal.NodeType dst_type = 3;
  inline bool has_dst_type() const;
  inline void clear_dst_type();
  static const int kDstTypeFieldNumber = 3;
  inline ::internal::NodeType dst_type() const;
  inline void set_dst_type(::internal::NodeType value);

  // optional uint32 dst_child_id = 4 [default = 1];
  inline bool has_dst_child_id() const;
  inline void clear_dst_child_id();
  static const int kDstChildIdFieldNumber = 4;
  inline ::google::protobuf::uint32 dst_child_id() const;
  inline void set_dst_child_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:internal.ForwardMessageRsp)
 private:
  inline void set_has_src_type();
  inline void clear_has_src_type();
  inline void set_has_src_child_id();
  inline void clear_has_src_child_id();
  inline void set_has_dst_type();
  inline void clear_has_dst_type();
  inline void set_has_dst_child_id();
  inline void clear_has_dst_child_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int src_type_;
  ::google::protobuf::uint32 src_child_id_;
  int dst_type_;
  ::google::protobuf::uint32 dst_child_id_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static ForwardMessageRsp* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastMessageReq : public ::google::protobuf::Message {
 public:
  BroadcastMessageReq();
  virtual ~BroadcastMessageReq();

  BroadcastMessageReq(const BroadcastMessageReq& from);

  inline BroadcastMessageReq& operator=(const BroadcastMessageReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastMessageReq& default_instance();

  void Swap(BroadcastMessageReq* other);

  // implements Message ----------------------------------------------

  BroadcastMessageReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastMessageReq& from);
  void MergeFrom(const BroadcastMessageReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .internal.NodeType dst_lists = 1;
  inline int dst_lists_size() const;
  inline void clear_dst_lists();
  static const int kDstListsFieldNumber = 1;
  inline ::internal::NodeType dst_lists(int index) const;
  inline void set_dst_lists(int index, ::internal::NodeType value);
  inline void add_dst_lists(::internal::NodeType value);
  inline const ::google::protobuf::RepeatedField<int>& dst_lists() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_dst_lists();

  // @@protoc_insertion_point(class_scope:internal.BroadcastMessageReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> dst_lists_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static BroadcastMessageReq* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastMessageRsp : public ::google::protobuf::Message {
 public:
  BroadcastMessageRsp();
  virtual ~BroadcastMessageRsp();

  BroadcastMessageRsp(const BroadcastMessageRsp& from);

  inline BroadcastMessageRsp& operator=(const BroadcastMessageRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastMessageRsp& default_instance();

  void Swap(BroadcastMessageRsp* other);

  // implements Message ----------------------------------------------

  BroadcastMessageRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastMessageRsp& from);
  void MergeFrom(const BroadcastMessageRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .internal.NodeType src_type = 1;
  inline bool has_src_type() const;
  inline void clear_src_type();
  static const int kSrcTypeFieldNumber = 1;
  inline ::internal::NodeType src_type() const;
  inline void set_src_type(::internal::NodeType value);

  // optional uint32 src_child_id = 2 [default = 1];
  inline bool has_src_child_id() const;
  inline void clear_src_child_id();
  static const int kSrcChildIdFieldNumber = 2;
  inline ::google::protobuf::uint32 src_child_id() const;
  inline void set_src_child_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:internal.BroadcastMessageRsp)
 private:
  inline void set_has_src_type();
  inline void clear_has_src_type();
  inline void set_has_src_child_id();
  inline void clear_has_src_child_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int src_type_;
  ::google::protobuf::uint32 src_child_id_;
  friend void  protobuf_AddDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_AssignDesc_proto_2finternal_2eprotocol_2eproto();
  friend void protobuf_ShutdownFile_proto_2finternal_2eprotocol_2eproto();

  void InitAsDefaultInstance();
  static BroadcastMessageRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// PingReq

// -------------------------------------------------------------------

// PongRsp

// -------------------------------------------------------------------

// LoginDBProxyReq

// -------------------------------------------------------------------

// LoginDBProxyRsp

// required uint32 heartbeat_interval = 1;
inline bool LoginDBProxyRsp::has_heartbeat_interval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginDBProxyRsp::set_has_heartbeat_interval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginDBProxyRsp::clear_has_heartbeat_interval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginDBProxyRsp::clear_heartbeat_interval() {
  heartbeat_interval_ = 0u;
  clear_has_heartbeat_interval();
}
inline ::google::protobuf::uint32 LoginDBProxyRsp::heartbeat_interval() const {
  // @@protoc_insertion_point(field_get:internal.LoginDBProxyRsp.heartbeat_interval)
  return heartbeat_interval_;
}
inline void LoginDBProxyRsp::set_heartbeat_interval(::google::protobuf::uint32 value) {
  set_has_heartbeat_interval();
  heartbeat_interval_ = value;
  // @@protoc_insertion_point(field_set:internal.LoginDBProxyRsp.heartbeat_interval)
}

// -------------------------------------------------------------------

// QueryDBProxyReq

// required uint32 sequence = 1;
inline bool QueryDBProxyReq::has_sequence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryDBProxyReq::set_has_sequence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryDBProxyReq::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryDBProxyReq::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
inline ::google::protobuf::uint32 QueryDBProxyReq::sequence() const {
  // @@protoc_insertion_point(field_get:internal.QueryDBProxyReq.sequence)
  return sequence_;
}
inline void QueryDBProxyReq::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:internal.QueryDBProxyReq.sequence)
}

// required .internal.QueryDBProxyReq.DatabaseType dbtype = 2;
inline bool QueryDBProxyReq::has_dbtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryDBProxyReq::set_has_dbtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryDBProxyReq::clear_has_dbtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryDBProxyReq::clear_dbtype() {
  dbtype_ = 1;
  clear_has_dbtype();
}
inline ::internal::QueryDBProxyReq_DatabaseType QueryDBProxyReq::dbtype() const {
  // @@protoc_insertion_point(field_get:internal.QueryDBProxyReq.dbtype)
  return static_cast< ::internal::QueryDBProxyReq_DatabaseType >(dbtype_);
}
inline void QueryDBProxyReq::set_dbtype(::internal::QueryDBProxyReq_DatabaseType value) {
  assert(::internal::QueryDBProxyReq_DatabaseType_IsValid(value));
  set_has_dbtype();
  dbtype_ = value;
  // @@protoc_insertion_point(field_set:internal.QueryDBProxyReq.dbtype)
}

// required .internal.QueryDBProxyReq.ActoinType action = 3;
inline bool QueryDBProxyReq::has_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryDBProxyReq::set_has_action() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryDBProxyReq::clear_has_action() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryDBProxyReq::clear_action() {
  action_ = 1;
  clear_has_action();
}
inline ::internal::QueryDBProxyReq_ActoinType QueryDBProxyReq::action() const {
  // @@protoc_insertion_point(field_get:internal.QueryDBProxyReq.action)
  return static_cast< ::internal::QueryDBProxyReq_ActoinType >(action_);
}
inline void QueryDBProxyReq::set_action(::internal::QueryDBProxyReq_ActoinType value) {
  assert(::internal::QueryDBProxyReq_ActoinType_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:internal.QueryDBProxyReq.action)
}

// required string dbname = 4;
inline bool QueryDBProxyReq::has_dbname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryDBProxyReq::set_has_dbname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryDBProxyReq::clear_has_dbname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryDBProxyReq::clear_dbname() {
  if (dbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_->clear();
  }
  clear_has_dbname();
}
inline const ::std::string& QueryDBProxyReq::dbname() const {
  // @@protoc_insertion_point(field_get:internal.QueryDBProxyReq.dbname)
  return *dbname_;
}
inline void QueryDBProxyReq::set_dbname(const ::std::string& value) {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  dbname_->assign(value);
  // @@protoc_insertion_point(field_set:internal.QueryDBProxyReq.dbname)
}
inline void QueryDBProxyReq::set_dbname(const char* value) {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  dbname_->assign(value);
  // @@protoc_insertion_point(field_set_char:internal.QueryDBProxyReq.dbname)
}
inline void QueryDBProxyReq::set_dbname(const char* value, size_t size) {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  dbname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:internal.QueryDBProxyReq.dbname)
}
inline ::std::string* QueryDBProxyReq::mutable_dbname() {
  set_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:internal.QueryDBProxyReq.dbname)
  return dbname_;
}
inline ::std::string* QueryDBProxyReq::release_dbname() {
  clear_has_dbname();
  if (dbname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dbname_;
    dbname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void QueryDBProxyReq::set_allocated_dbname(::std::string* dbname) {
  if (dbname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dbname_;
  }
  if (dbname) {
    set_has_dbname();
    dbname_ = dbname;
  } else {
    clear_has_dbname();
    dbname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:internal.QueryDBProxyReq.dbname)
}

// optional string statement = 5;
inline bool QueryDBProxyReq::has_statement() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryDBProxyReq::set_has_statement() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryDBProxyReq::clear_has_statement() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryDBProxyReq::clear_statement() {
  if (statement_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statement_->clear();
  }
  clear_has_statement();
}
inline const ::std::string& QueryDBProxyReq::statement() const {
  // @@protoc_insertion_point(field_get:internal.QueryDBProxyReq.statement)
  return *statement_;
}
inline void QueryDBProxyReq::set_statement(const ::std::string& value) {
  set_has_statement();
  if (statement_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statement_ = new ::std::string;
  }
  statement_->assign(value);
  // @@protoc_insertion_point(field_set:internal.QueryDBProxyReq.statement)
}
inline void QueryDBProxyReq::set_statement(const char* value) {
  set_has_statement();
  if (statement_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statement_ = new ::std::string;
  }
  statement_->assign(value);
  // @@protoc_insertion_point(field_set_char:internal.QueryDBProxyReq.statement)
}
inline void QueryDBProxyReq::set_statement(const char* value, size_t size) {
  set_has_statement();
  if (statement_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statement_ = new ::std::string;
  }
  statement_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:internal.QueryDBProxyReq.statement)
}
inline ::std::string* QueryDBProxyReq::mutable_statement() {
  set_has_statement();
  if (statement_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    statement_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:internal.QueryDBProxyReq.statement)
  return statement_;
}
inline ::std::string* QueryDBProxyReq::release_statement() {
  clear_has_statement();
  if (statement_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = statement_;
    statement_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void QueryDBProxyReq::set_allocated_statement(::std::string* statement) {
  if (statement_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete statement_;
  }
  if (statement) {
    set_has_statement();
    statement_ = statement;
  } else {
    clear_has_statement();
    statement_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:internal.QueryDBProxyReq.statement)
}

// -------------------------------------------------------------------

// QueryDBProxyRsp

// required uint32 sequence = 1;
inline bool QueryDBProxyRsp::has_sequence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryDBProxyRsp::set_has_sequence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryDBProxyRsp::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryDBProxyRsp::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
inline ::google::protobuf::uint32 QueryDBProxyRsp::sequence() const {
  // @@protoc_insertion_point(field_get:internal.QueryDBProxyRsp.sequence)
  return sequence_;
}
inline void QueryDBProxyRsp::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:internal.QueryDBProxyRsp.sequence)
}

// optional string result = 2;
inline bool QueryDBProxyRsp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryDBProxyRsp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryDBProxyRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryDBProxyRsp::clear_result() {
  if (result_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_->clear();
  }
  clear_has_result();
}
inline const ::std::string& QueryDBProxyRsp::result() const {
  // @@protoc_insertion_point(field_get:internal.QueryDBProxyRsp.result)
  return *result_;
}
inline void QueryDBProxyRsp::set_result(const ::std::string& value) {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  result_->assign(value);
  // @@protoc_insertion_point(field_set:internal.QueryDBProxyRsp.result)
}
inline void QueryDBProxyRsp::set_result(const char* value) {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  result_->assign(value);
  // @@protoc_insertion_point(field_set_char:internal.QueryDBProxyRsp.result)
}
inline void QueryDBProxyRsp::set_result(const char* value, size_t size) {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  result_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:internal.QueryDBProxyRsp.result)
}
inline ::std::string* QueryDBProxyRsp::mutable_result() {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:internal.QueryDBProxyRsp.result)
  return result_;
}
inline ::std::string* QueryDBProxyRsp::release_result() {
  clear_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = result_;
    result_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void QueryDBProxyRsp::set_allocated_result(::std::string* result) {
  if (result_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete result_;
  }
  if (result) {
    set_has_result();
    result_ = result;
  } else {
    clear_has_result();
    result_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:internal.QueryDBProxyRsp.result)
}

// -------------------------------------------------------------------

// DBErrorRsp

// required uint32 sequence = 1;
inline bool DBErrorRsp::has_sequence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBErrorRsp::set_has_sequence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBErrorRsp::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBErrorRsp::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
inline ::google::protobuf::uint32 DBErrorRsp::sequence() const {
  // @@protoc_insertion_point(field_get:internal.DBErrorRsp.sequence)
  return sequence_;
}
inline void DBErrorRsp::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:internal.DBErrorRsp.sequence)
}

// required int32 error_code = 2;
inline bool DBErrorRsp::has_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBErrorRsp::set_has_error_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBErrorRsp::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBErrorRsp::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 DBErrorRsp::error_code() const {
  // @@protoc_insertion_point(field_get:internal.DBErrorRsp.error_code)
  return error_code_;
}
inline void DBErrorRsp::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:internal.DBErrorRsp.error_code)
}

// optional string what = 3;
inline bool DBErrorRsp::has_what() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBErrorRsp::set_has_what() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBErrorRsp::clear_has_what() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBErrorRsp::clear_what() {
  if (what_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_->clear();
  }
  clear_has_what();
}
inline const ::std::string& DBErrorRsp::what() const {
  // @@protoc_insertion_point(field_get:internal.DBErrorRsp.what)
  return *what_;
}
inline void DBErrorRsp::set_what(const ::std::string& value) {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  what_->assign(value);
  // @@protoc_insertion_point(field_set:internal.DBErrorRsp.what)
}
inline void DBErrorRsp::set_what(const char* value) {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  what_->assign(value);
  // @@protoc_insertion_point(field_set_char:internal.DBErrorRsp.what)
}
inline void DBErrorRsp::set_what(const char* value, size_t size) {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  what_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:internal.DBErrorRsp.what)
}
inline ::std::string* DBErrorRsp::mutable_what() {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:internal.DBErrorRsp.what)
  return what_;
}
inline ::std::string* DBErrorRsp::release_what() {
  clear_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = what_;
    what_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBErrorRsp::set_allocated_what(::std::string* what) {
  if (what_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete what_;
  }
  if (what) {
    set_has_what();
    what_ = what;
  } else {
    clear_has_what();
    what_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:internal.DBErrorRsp.what)
}

// -------------------------------------------------------------------

// DBProxyErrorRsp

// required .internal.ErrorCode error_code = 1;
inline bool DBProxyErrorRsp::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBProxyErrorRsp::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBProxyErrorRsp::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBProxyErrorRsp::clear_error_code() {
  error_code_ = 1;
  clear_has_error_code();
}
inline ::internal::ErrorCode DBProxyErrorRsp::error_code() const {
  // @@protoc_insertion_point(field_get:internal.DBProxyErrorRsp.error_code)
  return static_cast< ::internal::ErrorCode >(error_code_);
}
inline void DBProxyErrorRsp::set_error_code(::internal::ErrorCode value) {
  assert(::internal::ErrorCode_IsValid(value));
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:internal.DBProxyErrorRsp.error_code)
}

// optional uint32 sequence = 2;
inline bool DBProxyErrorRsp::has_sequence() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBProxyErrorRsp::set_has_sequence() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBProxyErrorRsp::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBProxyErrorRsp::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
inline ::google::protobuf::uint32 DBProxyErrorRsp::sequence() const {
  // @@protoc_insertion_point(field_get:internal.DBProxyErrorRsp.sequence)
  return sequence_;
}
inline void DBProxyErrorRsp::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:internal.DBProxyErrorRsp.sequence)
}

// -------------------------------------------------------------------

// GatewayErrorRsp

// required .internal.ErrorCode error_code = 1;
inline bool GatewayErrorRsp::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GatewayErrorRsp::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GatewayErrorRsp::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GatewayErrorRsp::clear_error_code() {
  error_code_ = 1;
  clear_has_error_code();
}
inline ::internal::ErrorCode GatewayErrorRsp::error_code() const {
  // @@protoc_insertion_point(field_get:internal.GatewayErrorRsp.error_code)
  return static_cast< ::internal::ErrorCode >(error_code_);
}
inline void GatewayErrorRsp::set_error_code(::internal::ErrorCode value) {
  assert(::internal::ErrorCode_IsValid(value));
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:internal.GatewayErrorRsp.error_code)
}

// optional string what = 2;
inline bool GatewayErrorRsp::has_what() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GatewayErrorRsp::set_has_what() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GatewayErrorRsp::clear_has_what() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GatewayErrorRsp::clear_what() {
  if (what_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_->clear();
  }
  clear_has_what();
}
inline const ::std::string& GatewayErrorRsp::what() const {
  // @@protoc_insertion_point(field_get:internal.GatewayErrorRsp.what)
  return *what_;
}
inline void GatewayErrorRsp::set_what(const ::std::string& value) {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  what_->assign(value);
  // @@protoc_insertion_point(field_set:internal.GatewayErrorRsp.what)
}
inline void GatewayErrorRsp::set_what(const char* value) {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  what_->assign(value);
  // @@protoc_insertion_point(field_set_char:internal.GatewayErrorRsp.what)
}
inline void GatewayErrorRsp::set_what(const char* value, size_t size) {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  what_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:internal.GatewayErrorRsp.what)
}
inline ::std::string* GatewayErrorRsp::mutable_what() {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:internal.GatewayErrorRsp.what)
  return what_;
}
inline ::std::string* GatewayErrorRsp::release_what() {
  clear_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = what_;
    what_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GatewayErrorRsp::set_allocated_what(::std::string* what) {
  if (what_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete what_;
  }
  if (what) {
    set_has_what();
    what_ = what;
  } else {
    clear_has_what();
    what_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:internal.GatewayErrorRsp.what)
}

// -------------------------------------------------------------------

// LoginGatewayReq

// required .internal.NodeType type = 1;
inline bool LoginGatewayReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginGatewayReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginGatewayReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginGatewayReq::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::internal::NodeType LoginGatewayReq::type() const {
  // @@protoc_insertion_point(field_get:internal.LoginGatewayReq.type)
  return static_cast< ::internal::NodeType >(type_);
}
inline void LoginGatewayReq::set_type(::internal::NodeType value) {
  assert(::internal::NodeType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:internal.LoginGatewayReq.type)
}

// optional uint32 child_id = 2 [default = 1];
inline bool LoginGatewayReq::has_child_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginGatewayReq::set_has_child_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginGatewayReq::clear_has_child_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginGatewayReq::clear_child_id() {
  child_id_ = 1u;
  clear_has_child_id();
}
inline ::google::protobuf::uint32 LoginGatewayReq::child_id() const {
  // @@protoc_insertion_point(field_get:internal.LoginGatewayReq.child_id)
  return child_id_;
}
inline void LoginGatewayReq::set_child_id(::google::protobuf::uint32 value) {
  set_has_child_id();
  child_id_ = value;
  // @@protoc_insertion_point(field_set:internal.LoginGatewayReq.child_id)
}

// -------------------------------------------------------------------

// LoginGatewayRsp

// required uint32 heartbeat_interval = 1;
inline bool LoginGatewayRsp::has_heartbeat_interval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginGatewayRsp::set_has_heartbeat_interval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginGatewayRsp::clear_has_heartbeat_interval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginGatewayRsp::clear_heartbeat_interval() {
  heartbeat_interval_ = 0u;
  clear_has_heartbeat_interval();
}
inline ::google::protobuf::uint32 LoginGatewayRsp::heartbeat_interval() const {
  // @@protoc_insertion_point(field_get:internal.LoginGatewayRsp.heartbeat_interval)
  return heartbeat_interval_;
}
inline void LoginGatewayRsp::set_heartbeat_interval(::google::protobuf::uint32 value) {
  set_has_heartbeat_interval();
  heartbeat_interval_ = value;
  // @@protoc_insertion_point(field_set:internal.LoginGatewayRsp.heartbeat_interval)
}

// -------------------------------------------------------------------

// PauseWorkReq

// optional uint32 duration = 1 [default = 0];
inline bool PauseWorkReq::has_duration() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PauseWorkReq::set_has_duration() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PauseWorkReq::clear_has_duration() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PauseWorkReq::clear_duration() {
  duration_ = 0u;
  clear_has_duration();
}
inline ::google::protobuf::uint32 PauseWorkReq::duration() const {
  // @@protoc_insertion_point(field_get:internal.PauseWorkReq.duration)
  return duration_;
}
inline void PauseWorkReq::set_duration(::google::protobuf::uint32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:internal.PauseWorkReq.duration)
}

// -------------------------------------------------------------------

// PauseWorkRsp

// -------------------------------------------------------------------

// ContinueWorkReq

// -------------------------------------------------------------------

// ContinueWorkRsp

// -------------------------------------------------------------------

// ForwardMessageReq

// required .internal.NodeType dst_type = 1;
inline bool ForwardMessageReq::has_dst_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardMessageReq::set_has_dst_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardMessageReq::clear_has_dst_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardMessageReq::clear_dst_type() {
  dst_type_ = 1;
  clear_has_dst_type();
}
inline ::internal::NodeType ForwardMessageReq::dst_type() const {
  // @@protoc_insertion_point(field_get:internal.ForwardMessageReq.dst_type)
  return static_cast< ::internal::NodeType >(dst_type_);
}
inline void ForwardMessageReq::set_dst_type(::internal::NodeType value) {
  assert(::internal::NodeType_IsValid(value));
  set_has_dst_type();
  dst_type_ = value;
  // @@protoc_insertion_point(field_set:internal.ForwardMessageReq.dst_type)
}

// optional uint32 dst_child_id = 2 [default = 1];
inline bool ForwardMessageReq::has_dst_child_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardMessageReq::set_has_dst_child_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardMessageReq::clear_has_dst_child_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardMessageReq::clear_dst_child_id() {
  dst_child_id_ = 1u;
  clear_has_dst_child_id();
}
inline ::google::protobuf::uint32 ForwardMessageReq::dst_child_id() const {
  // @@protoc_insertion_point(field_get:internal.ForwardMessageReq.dst_child_id)
  return dst_child_id_;
}
inline void ForwardMessageReq::set_dst_child_id(::google::protobuf::uint32 value) {
  set_has_dst_child_id();
  dst_child_id_ = value;
  // @@protoc_insertion_point(field_set:internal.ForwardMessageReq.dst_child_id)
}

// -------------------------------------------------------------------

// ForwardMessageRsp

// required .internal.NodeType src_type = 1;
inline bool ForwardMessageRsp::has_src_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForwardMessageRsp::set_has_src_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForwardMessageRsp::clear_has_src_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForwardMessageRsp::clear_src_type() {
  src_type_ = 1;
  clear_has_src_type();
}
inline ::internal::NodeType ForwardMessageRsp::src_type() const {
  // @@protoc_insertion_point(field_get:internal.ForwardMessageRsp.src_type)
  return static_cast< ::internal::NodeType >(src_type_);
}
inline void ForwardMessageRsp::set_src_type(::internal::NodeType value) {
  assert(::internal::NodeType_IsValid(value));
  set_has_src_type();
  src_type_ = value;
  // @@protoc_insertion_point(field_set:internal.ForwardMessageRsp.src_type)
}

// optional uint32 src_child_id = 2 [default = 1];
inline bool ForwardMessageRsp::has_src_child_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForwardMessageRsp::set_has_src_child_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForwardMessageRsp::clear_has_src_child_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForwardMessageRsp::clear_src_child_id() {
  src_child_id_ = 1u;
  clear_has_src_child_id();
}
inline ::google::protobuf::uint32 ForwardMessageRsp::src_child_id() const {
  // @@protoc_insertion_point(field_get:internal.ForwardMessageRsp.src_child_id)
  return src_child_id_;
}
inline void ForwardMessageRsp::set_src_child_id(::google::protobuf::uint32 value) {
  set_has_src_child_id();
  src_child_id_ = value;
  // @@protoc_insertion_point(field_set:internal.ForwardMessageRsp.src_child_id)
}

// required .internal.NodeType dst_type = 3;
inline bool ForwardMessageRsp::has_dst_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForwardMessageRsp::set_has_dst_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForwardMessageRsp::clear_has_dst_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForwardMessageRsp::clear_dst_type() {
  dst_type_ = 1;
  clear_has_dst_type();
}
inline ::internal::NodeType ForwardMessageRsp::dst_type() const {
  // @@protoc_insertion_point(field_get:internal.ForwardMessageRsp.dst_type)
  return static_cast< ::internal::NodeType >(dst_type_);
}
inline void ForwardMessageRsp::set_dst_type(::internal::NodeType value) {
  assert(::internal::NodeType_IsValid(value));
  set_has_dst_type();
  dst_type_ = value;
  // @@protoc_insertion_point(field_set:internal.ForwardMessageRsp.dst_type)
}

// optional uint32 dst_child_id = 4 [default = 1];
inline bool ForwardMessageRsp::has_dst_child_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ForwardMessageRsp::set_has_dst_child_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ForwardMessageRsp::clear_has_dst_child_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ForwardMessageRsp::clear_dst_child_id() {
  dst_child_id_ = 1u;
  clear_has_dst_child_id();
}
inline ::google::protobuf::uint32 ForwardMessageRsp::dst_child_id() const {
  // @@protoc_insertion_point(field_get:internal.ForwardMessageRsp.dst_child_id)
  return dst_child_id_;
}
inline void ForwardMessageRsp::set_dst_child_id(::google::protobuf::uint32 value) {
  set_has_dst_child_id();
  dst_child_id_ = value;
  // @@protoc_insertion_point(field_set:internal.ForwardMessageRsp.dst_child_id)
}

// -------------------------------------------------------------------

// BroadcastMessageReq

// repeated .internal.NodeType dst_lists = 1;
inline int BroadcastMessageReq::dst_lists_size() const {
  return dst_lists_.size();
}
inline void BroadcastMessageReq::clear_dst_lists() {
  dst_lists_.Clear();
}
inline ::internal::NodeType BroadcastMessageReq::dst_lists(int index) const {
  // @@protoc_insertion_point(field_get:internal.BroadcastMessageReq.dst_lists)
  return static_cast< ::internal::NodeType >(dst_lists_.Get(index));
}
inline void BroadcastMessageReq::set_dst_lists(int index, ::internal::NodeType value) {
  assert(::internal::NodeType_IsValid(value));
  dst_lists_.Set(index, value);
  // @@protoc_insertion_point(field_set:internal.BroadcastMessageReq.dst_lists)
}
inline void BroadcastMessageReq::add_dst_lists(::internal::NodeType value) {
  assert(::internal::NodeType_IsValid(value));
  dst_lists_.Add(value);
  // @@protoc_insertion_point(field_add:internal.BroadcastMessageReq.dst_lists)
}
inline const ::google::protobuf::RepeatedField<int>&
BroadcastMessageReq::dst_lists() const {
  // @@protoc_insertion_point(field_list:internal.BroadcastMessageReq.dst_lists)
  return dst_lists_;
}
inline ::google::protobuf::RepeatedField<int>*
BroadcastMessageReq::mutable_dst_lists() {
  // @@protoc_insertion_point(field_mutable_list:internal.BroadcastMessageReq.dst_lists)
  return &dst_lists_;
}

// -------------------------------------------------------------------

// BroadcastMessageRsp

// required .internal.NodeType src_type = 1;
inline bool BroadcastMessageRsp::has_src_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastMessageRsp::set_has_src_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastMessageRsp::clear_has_src_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastMessageRsp::clear_src_type() {
  src_type_ = 1;
  clear_has_src_type();
}
inline ::internal::NodeType BroadcastMessageRsp::src_type() const {
  // @@protoc_insertion_point(field_get:internal.BroadcastMessageRsp.src_type)
  return static_cast< ::internal::NodeType >(src_type_);
}
inline void BroadcastMessageRsp::set_src_type(::internal::NodeType value) {
  assert(::internal::NodeType_IsValid(value));
  set_has_src_type();
  src_type_ = value;
  // @@protoc_insertion_point(field_set:internal.BroadcastMessageRsp.src_type)
}

// optional uint32 src_child_id = 2 [default = 1];
inline bool BroadcastMessageRsp::has_src_child_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastMessageRsp::set_has_src_child_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastMessageRsp::clear_has_src_child_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastMessageRsp::clear_src_child_id() {
  src_child_id_ = 1u;
  clear_has_src_child_id();
}
inline ::google::protobuf::uint32 BroadcastMessageRsp::src_child_id() const {
  // @@protoc_insertion_point(field_get:internal.BroadcastMessageRsp.src_child_id)
  return src_child_id_;
}
inline void BroadcastMessageRsp::set_src_child_id(::google::protobuf::uint32 value) {
  set_has_src_child_id();
  src_child_id_ = value;
  // @@protoc_insertion_point(field_set:internal.BroadcastMessageRsp.src_child_id)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace internal

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::internal::QueryDBProxyReq_ActoinType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::internal::QueryDBProxyReq_ActoinType>() {
  return ::internal::QueryDBProxyReq_ActoinType_descriptor();
}
template <> struct is_proto_enum< ::internal::QueryDBProxyReq_DatabaseType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::internal::QueryDBProxyReq_DatabaseType>() {
  return ::internal::QueryDBProxyReq_DatabaseType_descriptor();
}
template <> struct is_proto_enum< ::internal::ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::internal::ErrorCode>() {
  return ::internal::ErrorCode_descriptor();
}
template <> struct is_proto_enum< ::internal::NodeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::internal::NodeType>() {
  return ::internal::NodeType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2finternal_2eprotocol_2eproto__INCLUDED
