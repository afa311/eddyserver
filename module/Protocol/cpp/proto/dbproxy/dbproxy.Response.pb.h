// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/dbproxy/dbproxy.Response.proto

#ifndef PROTOBUF_proto_2fdbproxy_2fdbproxy_2eResponse_2eproto__INCLUDED
#define PROTOBUF_proto_2fdbproxy_2fdbproxy_2eResponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto_dbproxy {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_2fdbproxy_2fdbproxy_2eResponse_2eproto();
void protobuf_AssignDesc_proto_2fdbproxy_2fdbproxy_2eResponse_2eproto();
void protobuf_ShutdownFile_proto_2fdbproxy_2fdbproxy_2eResponse_2eproto();

class DBError;
class ProxyError;
class Response;

enum ProxyError_ErrorCode {
  ProxyError_ErrorCode_kDisconnect = 1,
  ProxyError_ErrorCode_kNotConnected = 2,
  ProxyError_ErrorCode_kInvalidProtocol = 3,
  ProxyError_ErrorCode_kInvalidAction = 4,
  ProxyError_ErrorCode_kNotFoundDatabase = 5,
  ProxyError_ErrorCode_kResourceInsufficiency = 6
};
bool ProxyError_ErrorCode_IsValid(int value);
const ProxyError_ErrorCode ProxyError_ErrorCode_ErrorCode_MIN = ProxyError_ErrorCode_kDisconnect;
const ProxyError_ErrorCode ProxyError_ErrorCode_ErrorCode_MAX = ProxyError_ErrorCode_kResourceInsufficiency;
const int ProxyError_ErrorCode_ErrorCode_ARRAYSIZE = ProxyError_ErrorCode_ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProxyError_ErrorCode_descriptor();
inline const ::std::string& ProxyError_ErrorCode_Name(ProxyError_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProxyError_ErrorCode_descriptor(), value);
}
inline bool ProxyError_ErrorCode_Parse(
    const ::std::string& name, ProxyError_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProxyError_ErrorCode>(
    ProxyError_ErrorCode_descriptor(), name, value);
}
// ===================================================================

class DBError : public ::google::protobuf::Message {
 public:
  DBError();
  virtual ~DBError();

  DBError(const DBError& from);

  inline DBError& operator=(const DBError& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBError& default_instance();

  void Swap(DBError* other);

  // implements Message ----------------------------------------------

  DBError* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DBError& from);
  void MergeFrom(const DBError& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 identifier = 1;
  inline bool has_identifier() const;
  inline void clear_identifier();
  static const int kIdentifierFieldNumber = 1;
  inline ::google::protobuf::uint32 identifier() const;
  inline void set_identifier(::google::protobuf::uint32 value);

  // required int32 error_code = 2;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 2;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);

  // optional string what = 3;
  inline bool has_what() const;
  inline void clear_what();
  static const int kWhatFieldNumber = 3;
  inline const ::std::string& what() const;
  inline void set_what(const ::std::string& value);
  inline void set_what(const char* value);
  inline void set_what(const char* value, size_t size);
  inline ::std::string* mutable_what();
  inline ::std::string* release_what();
  inline void set_allocated_what(::std::string* what);

  // @@protoc_insertion_point(class_scope:proto_dbproxy.DBError)
 private:
  inline void set_has_identifier();
  inline void clear_has_identifier();
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_what();
  inline void clear_has_what();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 identifier_;
  ::google::protobuf::int32 error_code_;
  ::std::string* what_;
  friend void  protobuf_AddDesc_proto_2fdbproxy_2fdbproxy_2eResponse_2eproto();
  friend void protobuf_AssignDesc_proto_2fdbproxy_2fdbproxy_2eResponse_2eproto();
  friend void protobuf_ShutdownFile_proto_2fdbproxy_2fdbproxy_2eResponse_2eproto();

  void InitAsDefaultInstance();
  static DBError* default_instance_;
};
// -------------------------------------------------------------------

class ProxyError : public ::google::protobuf::Message {
 public:
  ProxyError();
  virtual ~ProxyError();

  ProxyError(const ProxyError& from);

  inline ProxyError& operator=(const ProxyError& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyError& default_instance();

  void Swap(ProxyError* other);

  // implements Message ----------------------------------------------

  ProxyError* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProxyError& from);
  void MergeFrom(const ProxyError& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProxyError_ErrorCode ErrorCode;
  static const ErrorCode kDisconnect = ProxyError_ErrorCode_kDisconnect;
  static const ErrorCode kNotConnected = ProxyError_ErrorCode_kNotConnected;
  static const ErrorCode kInvalidProtocol = ProxyError_ErrorCode_kInvalidProtocol;
  static const ErrorCode kInvalidAction = ProxyError_ErrorCode_kInvalidAction;
  static const ErrorCode kNotFoundDatabase = ProxyError_ErrorCode_kNotFoundDatabase;
  static const ErrorCode kResourceInsufficiency = ProxyError_ErrorCode_kResourceInsufficiency;
  static inline bool ErrorCode_IsValid(int value) {
    return ProxyError_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    ProxyError_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    ProxyError_ErrorCode_ErrorCode_MAX;
  static const int ErrorCode_ARRAYSIZE =
    ProxyError_ErrorCode_ErrorCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return ProxyError_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return ProxyError_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return ProxyError_ErrorCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .proto_dbproxy.ProxyError.ErrorCode error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::proto_dbproxy::ProxyError_ErrorCode error_code() const;
  inline void set_error_code(::proto_dbproxy::ProxyError_ErrorCode value);

  // optional uint32 identifier = 2;
  inline bool has_identifier() const;
  inline void clear_identifier();
  static const int kIdentifierFieldNumber = 2;
  inline ::google::protobuf::uint32 identifier() const;
  inline void set_identifier(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_dbproxy.ProxyError)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_identifier();
  inline void clear_has_identifier();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int error_code_;
  ::google::protobuf::uint32 identifier_;
  friend void  protobuf_AddDesc_proto_2fdbproxy_2fdbproxy_2eResponse_2eproto();
  friend void protobuf_AssignDesc_proto_2fdbproxy_2fdbproxy_2eResponse_2eproto();
  friend void protobuf_ShutdownFile_proto_2fdbproxy_2fdbproxy_2eResponse_2eproto();

  void InitAsDefaultInstance();
  static ProxyError* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 identifier = 1;
  inline bool has_identifier() const;
  inline void clear_identifier();
  static const int kIdentifierFieldNumber = 1;
  inline ::google::protobuf::uint32 identifier() const;
  inline void set_identifier(::google::protobuf::uint32 value);

  // optional string result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline const ::std::string& result() const;
  inline void set_result(const ::std::string& value);
  inline void set_result(const char* value);
  inline void set_result(const char* value, size_t size);
  inline ::std::string* mutable_result();
  inline ::std::string* release_result();
  inline void set_allocated_result(::std::string* result);

  // @@protoc_insertion_point(class_scope:proto_dbproxy.Response)
 private:
  inline void set_has_identifier();
  inline void clear_has_identifier();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* result_;
  ::google::protobuf::uint32 identifier_;
  friend void  protobuf_AddDesc_proto_2fdbproxy_2fdbproxy_2eResponse_2eproto();
  friend void protobuf_AssignDesc_proto_2fdbproxy_2fdbproxy_2eResponse_2eproto();
  friend void protobuf_ShutdownFile_proto_2fdbproxy_2fdbproxy_2eResponse_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// ===================================================================


// ===================================================================

// DBError

// required uint32 identifier = 1;
inline bool DBError::has_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DBError::set_has_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DBError::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DBError::clear_identifier() {
  identifier_ = 0u;
  clear_has_identifier();
}
inline ::google::protobuf::uint32 DBError::identifier() const {
  // @@protoc_insertion_point(field_get:proto_dbproxy.DBError.identifier)
  return identifier_;
}
inline void DBError::set_identifier(::google::protobuf::uint32 value) {
  set_has_identifier();
  identifier_ = value;
  // @@protoc_insertion_point(field_set:proto_dbproxy.DBError.identifier)
}

// required int32 error_code = 2;
inline bool DBError::has_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DBError::set_has_error_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DBError::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DBError::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 DBError::error_code() const {
  // @@protoc_insertion_point(field_get:proto_dbproxy.DBError.error_code)
  return error_code_;
}
inline void DBError::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:proto_dbproxy.DBError.error_code)
}

// optional string what = 3;
inline bool DBError::has_what() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DBError::set_has_what() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DBError::clear_has_what() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DBError::clear_what() {
  if (what_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_->clear();
  }
  clear_has_what();
}
inline const ::std::string& DBError::what() const {
  // @@protoc_insertion_point(field_get:proto_dbproxy.DBError.what)
  return *what_;
}
inline void DBError::set_what(const ::std::string& value) {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  what_->assign(value);
  // @@protoc_insertion_point(field_set:proto_dbproxy.DBError.what)
}
inline void DBError::set_what(const char* value) {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  what_->assign(value);
  // @@protoc_insertion_point(field_set_char:proto_dbproxy.DBError.what)
}
inline void DBError::set_what(const char* value, size_t size) {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  what_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto_dbproxy.DBError.what)
}
inline ::std::string* DBError::mutable_what() {
  set_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    what_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:proto_dbproxy.DBError.what)
  return what_;
}
inline ::std::string* DBError::release_what() {
  clear_has_what();
  if (what_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = what_;
    what_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DBError::set_allocated_what(::std::string* what) {
  if (what_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete what_;
  }
  if (what) {
    set_has_what();
    what_ = what;
  } else {
    clear_has_what();
    what_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:proto_dbproxy.DBError.what)
}

// -------------------------------------------------------------------

// ProxyError

// required .proto_dbproxy.ProxyError.ErrorCode error_code = 1;
inline bool ProxyError::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProxyError::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProxyError::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProxyError::clear_error_code() {
  error_code_ = 1;
  clear_has_error_code();
}
inline ::proto_dbproxy::ProxyError_ErrorCode ProxyError::error_code() const {
  // @@protoc_insertion_point(field_get:proto_dbproxy.ProxyError.error_code)
  return static_cast< ::proto_dbproxy::ProxyError_ErrorCode >(error_code_);
}
inline void ProxyError::set_error_code(::proto_dbproxy::ProxyError_ErrorCode value) {
  assert(::proto_dbproxy::ProxyError_ErrorCode_IsValid(value));
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:proto_dbproxy.ProxyError.error_code)
}

// optional uint32 identifier = 2;
inline bool ProxyError::has_identifier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProxyError::set_has_identifier() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProxyError::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProxyError::clear_identifier() {
  identifier_ = 0u;
  clear_has_identifier();
}
inline ::google::protobuf::uint32 ProxyError::identifier() const {
  // @@protoc_insertion_point(field_get:proto_dbproxy.ProxyError.identifier)
  return identifier_;
}
inline void ProxyError::set_identifier(::google::protobuf::uint32 value) {
  set_has_identifier();
  identifier_ = value;
  // @@protoc_insertion_point(field_set:proto_dbproxy.ProxyError.identifier)
}

// -------------------------------------------------------------------

// Response

// required uint32 identifier = 1;
inline bool Response::has_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_identifier() {
  identifier_ = 0u;
  clear_has_identifier();
}
inline ::google::protobuf::uint32 Response::identifier() const {
  // @@protoc_insertion_point(field_get:proto_dbproxy.Response.identifier)
  return identifier_;
}
inline void Response::set_identifier(::google::protobuf::uint32 value) {
  set_has_identifier();
  identifier_ = value;
  // @@protoc_insertion_point(field_set:proto_dbproxy.Response.identifier)
}

// optional string result = 2;
inline bool Response::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_result() {
  if (result_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_->clear();
  }
  clear_has_result();
}
inline const ::std::string& Response::result() const {
  // @@protoc_insertion_point(field_get:proto_dbproxy.Response.result)
  return *result_;
}
inline void Response::set_result(const ::std::string& value) {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  result_->assign(value);
  // @@protoc_insertion_point(field_set:proto_dbproxy.Response.result)
}
inline void Response::set_result(const char* value) {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  result_->assign(value);
  // @@protoc_insertion_point(field_set_char:proto_dbproxy.Response.result)
}
inline void Response::set_result(const char* value, size_t size) {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  result_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto_dbproxy.Response.result)
}
inline ::std::string* Response::mutable_result() {
  set_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    result_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:proto_dbproxy.Response.result)
  return result_;
}
inline ::std::string* Response::release_result() {
  clear_has_result();
  if (result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = result_;
    result_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Response::set_allocated_result(::std::string* result) {
  if (result_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete result_;
  }
  if (result) {
    set_has_result();
    result_ = result;
  } else {
    clear_has_result();
    result_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:proto_dbproxy.Response.result)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_dbproxy

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto_dbproxy::ProxyError_ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_dbproxy::ProxyError_ErrorCode>() {
  return ::proto_dbproxy::ProxyError_ErrorCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fdbproxy_2fdbproxy_2eResponse_2eproto__INCLUDED
